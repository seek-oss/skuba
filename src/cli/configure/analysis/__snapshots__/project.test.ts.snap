// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`diffFiles works from scratch 1`] = `
Object {
  ".dockerignore": Object {
    "data": "# managed by skuba
.gantry/
.git/
.idea/
.serverless/
.vscode/
node_modules*/

/coverage*/
/dist*/
/lib*/
/tmp*/

.DS_Store
.npmrc
npm-debug.log
yarn-error.log
# end managed by skuba
",
    "operation": "A",
  },
  ".eslintignore": Object {
    "data": "# managed by skuba
.idea/
.serverless/
.vscode/
node_modules*/

/coverage*/
/dist*/
/lib*/
/tmp*/
# end managed by skuba
",
    "operation": "A",
  },
  ".eslintrc.js": Object {
    "data": "module.exports = {
  extends: ['skuba'],
};
",
    "operation": "A",
  },
  ".github/renovate.json5": Object {
    "data": "{
  extends: ['github>seek-oss/rynovate'],
}
",
    "operation": "A",
  },
  ".gitignore": Object {
    "data": "# managed by skuba
.cdk.staging/
.idea/
.serverless/
.vscode/
cdk.out/
node_modules*/

/coverage*/
/dist*/
/lib*/
/tmp*/

.DS_Store
.eslintcache
.npmrc
*.tgz
*.tsbuildinfo
npm-debug.log
package-lock.json
yarn-error.log
# end managed by skuba
",
    "operation": "A",
  },
  ".prettierignore": Object {
    "data": "# managed by skuba
.idea/
.serverless/
.vscode/
node_modules*/

/coverage*/
/dist*/
/lib*/
/tmp*/

# Gantry resource files support non-standard template syntax
/.gantry/**/*.yaml
/.gantry/**/*.yml
gantry*.yaml
gantry*.yml
# end managed by skuba
",
    "operation": "A",
  },
  ".prettierrc.js": Object {
    "data": "module.exports = require('skuba/config/prettier');
",
    "operation": "A",
  },
  "jest.config.ts": Object {
    "data": "import { Jest } from 'skuba';

export default Jest.mergePreset({
  coveragePathIgnorePatterns: ['src/testing'],
  coverageThreshold: {
    global: {
      branches: 0,
      functions: 0,
      lines: 0,
      statements: 0,
    },
  },
  setupFiles: ['<rootDir>/jest.setup.ts'],
  testPathIgnorePatterns: ['/test\\\\\\\\.ts'],
});
",
    "operation": "A",
  },
  "jest.setup.ts": Object {
    "data": "process.env.ENVIRONMENT = 'test';
",
    "operation": "A",
  },
  "package.json": Object {
    "data": "{
  \\"license\\": \\"UNLICENSED\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"skuba build\\",
    \\"format\\": \\"skuba format\\",
    \\"lint\\": \\"skuba lint\\",
    \\"start\\": \\"ENVIRONMENT=local skuba start\\",
    \\"test\\": \\"skuba test --coverage\\",
    \\"test:watch\\": \\"skuba test --watch\\"
  },
  \\"skuba\\": {
    \\"entryPoint\\": \\"src/app.ts\\",
    \\"template\\": null,
    \\"type\\": \\"application\\",
    \\"version\\": \\"0.0.0-semantically-released\\"
  }
}
",
    "operation": "A",
  },
  "tsconfig.build.json": Object {
    "data": "{
  \\"exclude\\": [\\"**/__mocks__/**/*\\", \\"**/*.test.ts\\", \\"src/testing/**/*\\"],
  \\"extends\\": \\"./tsconfig.json\\",
  \\"include\\": [\\"src/**/*\\"]
}
",
    "operation": "A",
  },
  "tsconfig.json": Object {
    "data": "{
  \\"compilerOptions\\": {
    \\"baseUrl\\": \\".\\",
    \\"outDir\\": \\"lib\\",
    \\"paths\\": {
      \\"src\\": [\\"src\\"]
    }
  },
  \\"exclude\\": [\\"lib*/**/*\\"],
  \\"extends\\": \\"skuba/config/tsconfig.json\\"
}
",
    "operation": "A",
  },
}
`;
