// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`returns expected CloudFormation stack for dev 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "codedeployalarm9F48D05F": {
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "worker28EA3E30",
            },
          },
          {
            "Name": "Resource",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "worker28EA3E30",
                  },
                  ":live",
                ],
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "codedeployapplicationF49B9864": {
      "Properties": {
        "ComputePlatform": "Lambda",
      },
      "Type": "AWS::CodeDeploy::Application",
    },
    "codedeploygroup441B094B": {
      "Properties": {
        "AlarmConfiguration": {
          "Alarms": [
            {
              "Name": {
                "Ref": "codedeployalarm9F48D05F",
              },
            },
          ],
          "Enabled": true,
        },
        "ApplicationName": {
          "Ref": "codedeployapplicationF49B9864",
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM",
          ],
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN",
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "codedeploygroupServiceRole1BD49E37",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CodeDeploy::DeploymentGroup",
    },
    "codedeploygroupServiceRole1BD49E37": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "codedeploygroupServiceRoleDefaultPolicy2027BC9A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "workerprehook415B13CE",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "workerprehook415B13CE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "workerposthook150842D6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "workerposthook150842D6",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "codedeploygroupServiceRoleDefaultPolicy2027BC9A",
        "Roles": [
          {
            "Ref": "codedeploygroupServiceRole1BD49E37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "kmskey49FBC3B3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "serviceName",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "kmskeyAlias39245779": {
      "Properties": {
        "AliasName": "alias/seek/self/serviceName",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "sourcetopic7C3DC892": {
      "Type": "AWS::SNS::Topic",
    },
    "worker28EA3E30": {
      "DependsOn": [
        "workerServiceRoleDefaultPolicyBA498553",
        "workerServiceRole2130CC7F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.zip",
        },
        "Description": "Updated at 1212-12-12T12:12:12.121Z",
        "Environment": {
          "Variables": {
            "ENVIRONMENT": "dev",
            "NODE_ENV": "production",
            "NODE_OPTIONS": "--enable-source-maps",
            "SERVICE": "serviceName",
            "VERSION": "local",
          },
        },
        "FunctionName": "serviceName",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "ReservedConcurrentExecutions": 2,
        "Role": {
          "Fn::GetAtt": [
            "workerServiceRole2130CC7F",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "workerAliaslive62FE5FAF": {
      "Properties": {
        "Description": "The Lambda version currently receiving traffic",
        "FunctionName": {
          "Ref": "worker28EA3E30",
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "workerCurrentVersionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "Version",
          ],
        },
        "Name": "live",
      },
      "Type": "AWS::Lambda::Alias",
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "AfterAllowTrafficHook": {
            "Ref": "workerposthook150842D6",
          },
          "ApplicationName": {
            "Ref": "codedeployapplicationF49B9864",
          },
          "BeforeAllowTrafficHook": {
            "Ref": "workerprehook415B13CE",
          },
          "DeploymentGroupName": {
            "Ref": "codedeploygroup441B094B",
          },
        },
      },
    },
    "workerAliasliveSqsEventSourceappStackworkerqueue8281B9F42DEDB47B": {
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": [
            "workerqueueA05CE5C6",
            "Arn",
          ],
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "workerAliaslive62FE5FAF",
                      },
                    ],
                  },
                ],
              },
              ":live",
            ],
          ],
        },
        "ScalingConfig": {
          "MaximumConcurrency": 2,
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "workerCurrentVersionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx": {
      "Properties": {
        "FunctionName": {
          "Ref": "worker28EA3E30",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "workerServiceRole2130CC7F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "workerServiceRoleDefaultPolicyBA498553": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "workerqueueA05CE5C6",
                  "Arn",
                ],
              },
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "kmskey49FBC3B3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "workerServiceRoleDefaultPolicyBA498553",
        "Roles": [
          {
            "Ref": "workerServiceRole2130CC7F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "workerposthook150842D6": {
      "DependsOn": [
        "workerposthookServiceRoleDefaultPolicy6A92F69C",
        "workerposthookServiceRole25452300",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.zip",
        },
        "Environment": {
          "Variables": {
            "ENVIRONMENT": "dev",
            "FUNCTION_NAME_TO_PRUNE": {
              "Ref": "worker28EA3E30",
            },
            "NODE_ENV": "production",
            "NODE_OPTIONS": "--enable-source-maps",
            "SERVICE": "serviceName",
            "VERSION": "local",
          },
        },
        "FunctionName": "serviceName-post-hook",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "workerposthookServiceRole25452300",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "workerposthookServiceRole25452300": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "workerposthookServiceRoleDefaultPolicy6A92F69C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:ListAliases",
                "lambda:ListVersionsByFunction",
                "lambda:DeleteFunction",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "worker28EA3E30",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "worker28EA3E30",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "codedeploy:PutLifecycleEventHookExecutionStatus",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codedeploy:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":deploymentgroup:",
                    {
                      "Ref": "codedeployapplicationF49B9864",
                    },
                    "/",
                    {
                      "Ref": "codedeploygroup441B094B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "workerposthookServiceRoleDefaultPolicy6A92F69C",
        "Roles": [
          {
            "Ref": "workerposthookServiceRole25452300",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "workerprehook415B13CE": {
      "DependsOn": [
        "workerprehookServiceRoleDefaultPolicy991A21B9",
        "workerprehookServiceRole8F8D9379",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.zip",
        },
        "Environment": {
          "Variables": {
            "ENVIRONMENT": "dev",
            "FUNCTION_NAME_TO_INVOKE": {
              "Ref": "worker28EA3E30",
            },
            "NODE_ENV": "production",
            "NODE_OPTIONS": "--enable-source-maps",
            "SERVICE": "serviceName",
            "VERSION": "local",
          },
        },
        "FunctionName": "serviceName-pre-hook",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "workerprehookServiceRole8F8D9379",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "workerprehookServiceRole8F8D9379": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "workerprehookServiceRoleDefaultPolicy991A21B9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "worker28EA3E30",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "worker28EA3E30",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "codedeploy:PutLifecycleEventHookExecutionStatus",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codedeploy:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":deploymentgroup:",
                    {
                      "Ref": "codedeployapplicationF49B9864",
                    },
                    "/",
                    {
                      "Ref": "codedeploygroup441B094B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "workerprehookServiceRoleDefaultPolicy991A21B9",
        "Roles": [
          {
            "Ref": "workerprehookServiceRole8F8D9379",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "workerqueueA05CE5C6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "QueueName": "serviceName",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "workerqueuedeadletters83F3505C",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "workerqueuePolicy97054CB4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "sourcetopic7C3DC892",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "workerqueueA05CE5C6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "workerqueueA05CE5C6",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "workerqueueappStacksourcetopic613C6BDBD2F224F5": {
      "DependsOn": [
        "workerqueuePolicy97054CB4",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "workerqueueA05CE5C6",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "sourcetopic7C3DC892",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "workerqueuedeadletters83F3505C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "QueueName": "serviceName-dead-letters",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`returns expected CloudFormation stack for prod 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "codedeployalarm9F48D05F": {
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "worker28EA3E30",
            },
          },
          {
            "Name": "Resource",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "worker28EA3E30",
                  },
                  ":live",
                ],
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "codedeployapplicationF49B9864": {
      "Properties": {
        "ComputePlatform": "Lambda",
      },
      "Type": "AWS::CodeDeploy::Application",
    },
    "codedeploygroup441B094B": {
      "Properties": {
        "AlarmConfiguration": {
          "Alarms": [
            {
              "Name": {
                "Ref": "codedeployalarm9F48D05F",
              },
            },
          ],
          "Enabled": true,
        },
        "ApplicationName": {
          "Ref": "codedeployapplicationF49B9864",
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM",
          ],
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN",
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "codedeploygroupServiceRole1BD49E37",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CodeDeploy::DeploymentGroup",
    },
    "codedeploygroupServiceRole1BD49E37": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "codedeploygroupServiceRoleDefaultPolicy2027BC9A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "workerprehook415B13CE",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "workerprehook415B13CE",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "workerposthook150842D6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "workerposthook150842D6",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "codedeploygroupServiceRoleDefaultPolicy2027BC9A",
        "Roles": [
          {
            "Ref": "codedeploygroupServiceRole1BD49E37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "kmskey49FBC3B3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "serviceName",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "kmskeyAlias39245779": {
      "Properties": {
        "AliasName": "alias/seek/self/serviceName",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "sourcetopic7C3DC892": {
      "Type": "AWS::SNS::Topic",
    },
    "worker28EA3E30": {
      "DependsOn": [
        "workerServiceRoleDefaultPolicyBA498553",
        "workerServiceRole2130CC7F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.zip",
        },
        "Description": "Updated at 1212-12-12T12:12:12.121Z",
        "Environment": {
          "Variables": {
            "ENVIRONMENT": "prod",
            "NODE_ENV": "production",
            "NODE_OPTIONS": "--enable-source-maps",
            "SERVICE": "serviceName",
            "VERSION": "local",
          },
        },
        "FunctionName": "serviceName",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "ReservedConcurrentExecutions": 20,
        "Role": {
          "Fn::GetAtt": [
            "workerServiceRole2130CC7F",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "workerAliaslive62FE5FAF": {
      "Properties": {
        "Description": "The Lambda version currently receiving traffic",
        "FunctionName": {
          "Ref": "worker28EA3E30",
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "workerCurrentVersionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "Version",
          ],
        },
        "Name": "live",
      },
      "Type": "AWS::Lambda::Alias",
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "AfterAllowTrafficHook": {
            "Ref": "workerposthook150842D6",
          },
          "ApplicationName": {
            "Ref": "codedeployapplicationF49B9864",
          },
          "BeforeAllowTrafficHook": {
            "Ref": "workerprehook415B13CE",
          },
          "DeploymentGroupName": {
            "Ref": "codedeploygroup441B094B",
          },
        },
      },
    },
    "workerAliasliveSqsEventSourceappStackworkerqueue8281B9F42DEDB47B": {
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": [
            "workerqueueA05CE5C6",
            "Arn",
          ],
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "workerAliaslive62FE5FAF",
                      },
                    ],
                  },
                ],
              },
              ":live",
            ],
          ],
        },
        "ScalingConfig": {
          "MaximumConcurrency": 20,
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "workerCurrentVersionxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx": {
      "Properties": {
        "FunctionName": {
          "Ref": "worker28EA3E30",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "workerServiceRole2130CC7F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "workerServiceRoleDefaultPolicyBA498553": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "workerqueueA05CE5C6",
                  "Arn",
                ],
              },
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "kmskey49FBC3B3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "workerServiceRoleDefaultPolicyBA498553",
        "Roles": [
          {
            "Ref": "workerServiceRole2130CC7F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "workerposthook150842D6": {
      "DependsOn": [
        "workerposthookServiceRoleDefaultPolicy6A92F69C",
        "workerposthookServiceRole25452300",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.zip",
        },
        "Environment": {
          "Variables": {
            "ENVIRONMENT": "prod",
            "FUNCTION_NAME_TO_PRUNE": {
              "Ref": "worker28EA3E30",
            },
            "NODE_ENV": "production",
            "NODE_OPTIONS": "--enable-source-maps",
            "SERVICE": "serviceName",
            "VERSION": "local",
          },
        },
        "FunctionName": "serviceName-post-hook",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "workerposthookServiceRole25452300",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "workerposthookServiceRole25452300": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "workerposthookServiceRoleDefaultPolicy6A92F69C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:ListAliases",
                "lambda:ListVersionsByFunction",
                "lambda:DeleteFunction",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "worker28EA3E30",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "worker28EA3E30",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "codedeploy:PutLifecycleEventHookExecutionStatus",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codedeploy:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":deploymentgroup:",
                    {
                      "Ref": "codedeployapplicationF49B9864",
                    },
                    "/",
                    {
                      "Ref": "codedeploygroup441B094B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "workerposthookServiceRoleDefaultPolicy6A92F69C",
        "Roles": [
          {
            "Ref": "workerposthookServiceRole25452300",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "workerprehook415B13CE": {
      "DependsOn": [
        "workerprehookServiceRoleDefaultPolicy991A21B9",
        "workerprehookServiceRole8F8D9379",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.zip",
        },
        "Environment": {
          "Variables": {
            "ENVIRONMENT": "prod",
            "FUNCTION_NAME_TO_INVOKE": {
              "Ref": "worker28EA3E30",
            },
            "NODE_ENV": "production",
            "NODE_OPTIONS": "--enable-source-maps",
            "SERVICE": "serviceName",
            "VERSION": "local",
          },
        },
        "FunctionName": "serviceName-pre-hook",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "workerprehookServiceRole8F8D9379",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "workerprehookServiceRole8F8D9379": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "workerprehookServiceRoleDefaultPolicy991A21B9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "worker28EA3E30",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "worker28EA3E30",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "codedeploy:PutLifecycleEventHookExecutionStatus",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codedeploy:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":deploymentgroup:",
                    {
                      "Ref": "codedeployapplicationF49B9864",
                    },
                    "/",
                    {
                      "Ref": "codedeploygroup441B094B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "workerprehookServiceRoleDefaultPolicy991A21B9",
        "Roles": [
          {
            "Ref": "workerprehookServiceRole8F8D9379",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "workerqueueA05CE5C6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "QueueName": "serviceName",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "workerqueuedeadletters83F3505C",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "workerqueuePolicy97054CB4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "sourcetopic7C3DC892",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "workerqueueA05CE5C6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "workerqueueA05CE5C6",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "workerqueueappStacksourcetopic613C6BDBD2F224F5": {
      "DependsOn": [
        "workerqueuePolicy97054CB4",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "workerqueueA05CE5C6",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "sourcetopic7C3DC892",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "workerqueuedeadletters83F3505C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "kmskey49FBC3B3",
            "Arn",
          ],
        },
        "QueueName": "serviceName-dead-letters",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
