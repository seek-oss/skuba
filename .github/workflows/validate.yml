name: Validate

on:
  pull_request:

  push:
    branches-ignore:
      - main

  workflow_run:
    branches:
      - main
    types:
      - completed
    workflows:
      - Release

permissions: {}

jobs:
  core:
    name: Lint & Test
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork
    permissions:
      checks: write
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - if: >-
          github.actor != 'dependabot[bot]' && (
            github.event_name != 'pull_request' ||
            github.event.pull_request.head.repo.full_name == github.repository
          )
        name: Check out repo
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.SEEK_OSS_CI_GITHUB_TOKEN || github.token }}

      - if: >-
          github.actor == 'dependabot[bot]' || (
            github.event_name == 'pull_request' &&
            github.event.pull_request.head.repo.full_name != github.repository
          )
        name: Check out repo
        uses: actions/checkout@v5
        # We don't share secrets with Dependabot nor forks.

      - name: Set Git user
        run: |
          git config user.name seek-oss-ci
          git config user.email 34733141+seek-oss-ci@users.noreply.github.com

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ^22.14

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test:ci

      - name: Lint
        run: pnpm lint

      - if: github.event_name == 'push'
        name: Dry-run changelog versioning
        run: pnpm changeset version

      - if: github.event_name == 'push'
        name: Dry-run site packaging
        run: pnpm skuba node scripts/package.ts

  package:
    name: Lint
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        template:
          - eslint-config-skuba
          - eslint-plugin-skuba
          - skuba-dive
    steps:
      - name: Check out repo
        uses: actions/checkout@v5

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ^22.14

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Skuba
        run: pnpm build

      - if: github.head_ref != 'changeset-release/main' && github.ref_name != 'changeset-release/main'
        name: Lint package
        env:
          SKIP_NODE_UPGRADE: true
        run: pnpm --filter ${{ matrix.template }} lint

      - if: github.head_ref != 'changeset-release/main' && github.ref_name != 'changeset-release/main'
        name: Test package
        run: pnpm --filter ${{ matrix.template }} test:ci

  template:
    name: Integrate
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        template:
          - express-rest-api
          - greeter
          - koa-rest-api
          - lambda-sqs-worker-cdk
          - oss-npm-package
          - private-npm-package
    steps:
      - name: Check out repo
        uses: actions/checkout@v5

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ^22.14

      - if: github.head_ref != 'changeset-release/main' && github.ref_name != 'changeset-release/main'
        name: Test template
        run: pnpm test:template ${{ matrix.template }}
